/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.laundryApp.view;


import java.util.ArrayList;
import com.laundryApp.model.User;
import com.laundryApp.model.Laundry;
import com.laundryApp.controller.SortAlgorithms;
import com.laundryApp.controller.BinarySearch;
import javax.swing.table.DefaultTableModel;
import java.util.List;


/**
 *
 * @author apilghimire
 */
public class laundryView extends javax.swing.JFrame {

    /**
     * Creates new form laundryView
     */
    // Create an ArrayList to store User objects
        ArrayList<User> userList = new ArrayList<>();
        
    // Create an ArrayList to store Orders objects
        ArrayList<Laundry> laundrylist = new ArrayList<>();

        
        
    public laundryView() {
        initComponents();
        
        //Adding predefined Costumers in list 
        userList.add(new User(1, "Apil Ghimire", 1234567890, "alice.johnson@example.com", "123 Elm Street"));
        userList.add(new User(2, "Bob Smith", 987654321, "bob.smith@example.com", "456 Oak Avenue"));
        userList.add(new User(3, "Charlie Brown", 555123456, "charlie.brown@example.com", "789 Pine Road"));
        userList.add(new User(4, "Diana Prince", 777888999, "diana.prince@example.com", "321 Maple Lane"));
        userList.add(new User(5, "Ethan Hunt", 111222333, "ethan.hunt@example.com", "654 Cedar Boulevard"));
        
        //Show data to table if available
        populateLaundryTable();
        sortDashBoardTableByUserName();
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LaundryTypeButtonGroup = new javax.swing.ButtonGroup();
        logoLabel = new javax.swing.JLabel();
        mainLabel = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        dashBoardTabPanel = new javax.swing.JTabbedPane();
        TaskPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        updateTypeComboBox = new javax.swing.JComboBox<>();
        updateButton = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        sortButton = new javax.swing.JButton();
        OrderPanel = new javax.swing.JPanel();
        laundryTypeLabel = new javax.swing.JLabel();
        CostumerIdLabel = new javax.swing.JLabel();
        launderyWeightLabel = new javax.swing.JLabel();
        pickUpServiceLabel = new javax.swing.JLabel();
        DropOffSericeLabel = new javax.swing.JLabel();
        addLaundryButton = new javax.swing.JButton();
        deleteLaundryButton = new javax.swing.JButton();
        CostumerIDComboBox = new javax.swing.JComboBox<>();
        pickUpCheckBox1 = new javax.swing.JCheckBox();
        dropOffCheckBox = new javax.swing.JCheckBox();
        LaundryTypejComboBox1 = new javax.swing.JComboBox<>();
        weightJFormatedTextFiled = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        laundryIDTextField1 = new javax.swing.JTextField();
        dashBoardPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dashBoardTable = new javax.swing.JTable();
        SearchTextField = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1280, 800));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/laundryApp/view/resources/spotwashe (4).png"))); // NOI18N
        getContentPane().add(logoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 230, 110));

        mainLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 30)); // NOI18N
        mainLabel.setText("LAUNDRY MANAGEMENT SYSTEM");
        mainLabel.setMaximumSize(new java.awt.Dimension(300, 50));
        mainLabel.setPreferredSize(new java.awt.Dimension(300, 50));
        getContentPane().add(mainLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 540, 50));
        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 170, -1, -1));

        dashBoardTabPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashBoardTabPanelMouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Laundry ID", "Laundry Weight", "Laundry Type", "Laundry Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Update Status");

        updateTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort Clothes", "Clean", "Fold", "finished" }));

        updateButton.setText("Update Status");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"by ID Ascending","by ID Descending","by Weight Ascending","by Weight Descending","by Status Ascending","by Status Descending"}));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        sortButton.setText("Sort");
        sortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TaskPanelLayout = new javax.swing.GroupLayout(TaskPanel);
        TaskPanel.setLayout(TaskPanelLayout);
        TaskPanelLayout.setHorizontalGroup(
            TaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TaskPanelLayout.createSequentialGroup()
                .addGroup(TaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TaskPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1268, Short.MAX_VALUE))
                    .addGroup(TaskPanelLayout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(248, 248, 248)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sortButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        TaskPanelLayout.setVerticalGroup(
            TaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TaskPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(142, 142, 142)
                .addGroup(TaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(updateTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortButton))
                .addGap(141, 141, 141))
        );

        dashBoardTabPanel.addTab("Task", TaskPanel);

        laundryTypeLabel.setText("Laundry Type");

        CostumerIdLabel.setText("Costumer ID");

        launderyWeightLabel.setText("Laundry Weight");

        pickUpServiceLabel.setText("Pickup Service");

        DropOffSericeLabel.setText("Dropoff Service");

        addLaundryButton.setText("Add Order");
        addLaundryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLaundryButtonActionPerformed(evt);
            }
        });

        deleteLaundryButton.setText("Delete Order");
        deleteLaundryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteLaundryButtonActionPerformed(evt);
            }
        });

        CostumerIDComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        CostumerIDComboBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                CostumerIDComboBoxPopupMenuWillBecomeVisible(evt);
            }
        });
        CostumerIDComboBox.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                CostumerIDComboBoxComponentShown(evt);
            }
        });
        CostumerIDComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CostumerIDComboBoxActionPerformed(evt);
            }
        });

        pickUpCheckBox1.setText("Need Pick up Service");

        dropOffCheckBox.setText("Need Drop Off Service");
        dropOffCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropOffCheckBoxActionPerformed(evt);
            }
        });

        LaundryTypejComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dry Cleaning", "Wash", "Iron"}));

        jLabel1.setText("Laundry ID");

        javax.swing.GroupLayout OrderPanelLayout = new javax.swing.GroupLayout(OrderPanel);
        OrderPanel.setLayout(OrderPanelLayout);
        OrderPanelLayout.setHorizontalGroup(
            OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrderPanelLayout.createSequentialGroup()
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OrderPanelLayout.createSequentialGroup()
                        .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(OrderPanelLayout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(pickUpServiceLabel)
                                .addGap(21, 21, 21))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrderPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(launderyWeightLabel)
                                    .addComponent(laundryTypeLabel)
                                    .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1)
                                        .addComponent(CostumerIdLabel)))
                                .addGap(17, 17, 17)))
                        .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(OrderPanelLayout.createSequentialGroup()
                                .addComponent(pickUpCheckBox1)
                                .addGap(275, 275, 275)
                                .addComponent(DropOffSericeLabel)
                                .addGap(31, 31, 31)
                                .addComponent(dropOffCheckBox))
                            .addComponent(LaundryTypejComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(weightJFormatedTextFiled, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(laundryIDTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(CostumerIDComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 349, Short.MAX_VALUE))))
                    .addGroup(OrderPanelLayout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(addLaundryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(347, 347, 347)
                        .addComponent(deleteLaundryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(398, Short.MAX_VALUE))
        );
        OrderPanelLayout.setVerticalGroup(
            OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrderPanelLayout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(laundryIDTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CostumerIDComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CostumerIdLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(57, 57, 57)
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LaundryTypejComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(laundryTypeLabel))
                .addGap(74, 74, 74)
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(launderyWeightLabel)
                    .addComponent(weightJFormatedTextFiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pickUpServiceLabel)
                    .addComponent(pickUpCheckBox1)
                    .addComponent(DropOffSericeLabel)
                    .addComponent(dropOffCheckBox))
                .addGap(85, 85, 85)
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addLaundryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteLaundryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98))
        );

        dashBoardTabPanel.addTab("Order", OrderPanel);

        dashBoardTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "User ID", "Name", "Contect Number", "Email Address", "Address"
            }
        ));
        jScrollPane2.setViewportView(dashBoardTable);

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dashBoardPanelLayout = new javax.swing.GroupLayout(dashBoardPanel);
        dashBoardPanel.setLayout(dashBoardPanelLayout);
        dashBoardPanelLayout.setHorizontalGroup(
            dashBoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashBoardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1268, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashBoardPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchButton)
                .addGap(89, 89, 89))
        );
        dashBoardPanelLayout.setVerticalGroup(
            dashBoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashBoardPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(dashBoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        dashBoardTabPanel.addTab("Dash Board", dashBoardPanel);

        getContentPane().add(dashBoardTabPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 1280, 670));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CostumerIDComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CostumerIDComboBoxActionPerformed

    }//GEN-LAST:event_CostumerIDComboBoxActionPerformed

    private void addLaundryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLaundryButtonActionPerformed
        // this will add Laundry Order to the system
        try {
        // Retrieve data from input fields
        String laundryIdStr = laundryIDTextField1.getText().trim();
        String selectedCustomerId = (String) CostumerIDComboBox.getSelectedItem();
        String selectedLaundryType = (String) LaundryTypejComboBox1.getSelectedItem();
        String weightStr = weightJFormatedTextFiled.getText().trim();
        boolean isPickupSelected = pickUpCheckBox1.isSelected();
        boolean isDropOffSelected = dropOffCheckBox.isSelected();

        // Validate input data
        if (laundryIdStr.isEmpty() || selectedCustomerId == null || selectedLaundryType == null || weightStr.isEmpty()) {
            throw new IllegalArgumentException("All fields are required. Please ensure no field is left empty.");
        }

        int laundryId = Integer.parseInt(laundryIdStr); // Convert Laundry ID to integer
        int customerId = Integer.parseInt(selectedCustomerId); // Convert Customer ID to integer
        double weight = Double.parseDouble(weightStr); // Convert Laundry Weight to double

        // Reset fields after successful addition
        laundryIDTextField1.setText("");
        weightJFormatedTextFiled.setText("");
        pickUpCheckBox1.setSelected(false);
        dropOffCheckBox.setSelected(false);
        boolean addOrder = true;
        for(int i = 0;i< laundrylist.size();i++){
            if(laundryId == laundrylist.get(i).getLaundryId()){
                        javax.swing.JOptionPane.showMessageDialog(this, "UserID already exists", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                        addOrder = false;
                        
            }
        }
        if(addOrder){
        laundrylist.add(new Laundry(laundryId,weight,selectedLaundryType,isPickupSelected,isDropOffSelected,customerId));
        //calculate the price of the order
        laundrylist.getLast().setLaunderyPrice();
        
        // Display success message
        javax.swing.JOptionPane.showMessageDialog(this, "Order Placed sucessfully with following Details"+laundrylist.getLast().toString());
        populateLaundryTable();
        }
        
        

    } catch (NumberFormatException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Invalid number format. Please ensure Laundry ID and Weight are numeric.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    } catch (IllegalArgumentException e) {
        javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_addLaundryButtonActionPerformed

    private void dropOffCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropOffCheckBoxActionPerformed
        // TODO add your handling code here:
        try{
            
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_dropOffCheckBoxActionPerformed

    private void CostumerIDComboBoxComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_CostumerIDComboBoxComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_CostumerIDComboBoxComponentShown

    private void CostumerIDComboBoxPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_CostumerIDComboBoxPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        CostumerIDComboBox.removeAllItems();
        for (int i = 0; i < userList.size(); i++) { // Corrected condition: i < userList.size()
    CostumerIDComboBox.addItem(String.valueOf(userList.get(i).getUserID())); // Use addItem() instead of add()
}
    }//GEN-LAST:event_CostumerIDComboBoxPopupMenuWillBecomeVisible

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void deleteLaundryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteLaundryButtonActionPerformed
        // TODO add your handling code here:                                                  
    try {
        // Retrieve laundry ID from the text field
        String laundryIdStr = laundryIDTextField1.getText().trim();

        // Validate input
        if (laundryIdStr.isEmpty()) {
            throw new IllegalArgumentException("Laundry ID field cannot be empty.");
        }

        int laundryId = Integer.parseInt(laundryIdStr); // Convert Laundry ID to integer

        // Search for the laundry entry with the specified ID
        boolean found = false;
        for (int i = 0; i < laundrylist.size(); i++) {
            Laundry laundry = laundrylist.get(i);
            if (laundry.getLaundryId() == laundryId) { // Assuming getLaundryId() exists in your model
                laundrylist.remove(i); // Remove the laundry order
                found = true;
                break;
            }
        }

        // Check if the laundry order was found
        if (!found) {
            throw new IllegalArgumentException("No laundry order found with the specified ID.");
        }

        // Reset the input field after deletion
        laundryIDTextField1.setText("");

        // Provide user feedback
        javax.swing.JOptionPane.showMessageDialog(this, "Laundry order deleted successfully!");

    } catch (NumberFormatException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Invalid laundry ID. Please enter a numeric value.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    } catch (IllegalArgumentException e) {
        javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
populateLaundryTable();
    }//GEN-LAST:event_deleteLaundryButtonActionPerformed

    private void dashBoardTabPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashBoardTabPanelMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_dashBoardTabPanelMouseClicked

    private void sortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButtonActionPerformed
        // TODO add your handling code here:
        try {
        // Read the selected sort type from the combo box
        String selectedSortType = (String) jComboBox2.getSelectedItem();

        // Call the Sort class's method with laundrylist and the selected sort type
        SortAlgorithms.sortLaundryList(laundrylist, selectedSortType);

        // Repopulate the table to reflect the sorted data
        populateLaundryTable();

        // Display a success message
        javax.swing.JOptionPane.showMessageDialog(this, "Laundry list sorted by " + selectedSortType + "!");
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "An error occurred while sorting: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_sortButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        try {
        // Get the selected row index
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            throw new IllegalArgumentException("No row selected. Please select a row to update.");
        }

        // Get the Laundry ID from the selected row
        int laundryId = Integer.parseInt(jTable1.getValueAt(selectedRow, 0).toString());

        // Get the new status from updateTypeComboBox
        String newStatus = (String) updateTypeComboBox.getSelectedItem();
        

        // Find the laundry item in the list and update its status
        boolean found = false;
        for (Laundry laundry : laundrylist) {
            if (laundry.getLaundryId() == laundryId) {
                if(newStatus=="finished"){
                    laundry.setLaundryCondition("inActive");
                }
                laundry.setLaundryStatus(newStatus); // Assuming setStatus() exists in the Laundry class
                found = true;
                break;
            }
        }

        if (!found) {
            throw new IllegalArgumentException("Laundry item with ID " + laundryId + " not found.");
        }

        // Refresh the table to reflect the updated data
        populateLaundryTable();

        // Display a success message
        javax.swing.JOptionPane.showMessageDialog(this, "Laundry status updated successfully!");

    } catch (NumberFormatException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Invalid Laundry ID. Please ensure the selected row has a valid ID.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    } catch (IllegalArgumentException e) {
        javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
        try {
        // Get the search term from the SearchTextField
        String searchTerm = SearchTextField.getText().trim();

        if (searchTerm.isEmpty()) {
            sortDashBoardTableByUserName();
            return;
        }

        // Call the BinarySearch class to search the userList
        User result = BinarySearch.searchByName(userList, searchTerm);

        // Clear the dashBoardTable
        DefaultTableModel tableModel = (DefaultTableModel) dashBoardTable.getModel();
        tableModel.setRowCount(0);

        if (result != null) {
            // Populate the table with the search result
            Object[] rowData = {
                result.getUserID(),
                result.getUserName(),
                result.getContactNumber(),
                result.getUserEmail(),
                result.getUserAddress()
            };
            tableModel.addRow(rowData);
        } else {
            // Display a message if no match is found
            javax.swing.JOptionPane.showMessageDialog(this, "No user found with the name: " + searchTerm, "Search Result", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (IllegalArgumentException e) {
        javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_SearchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(laundryView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(laundryView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(laundryView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(laundryView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new laundryView().setVisible(true);
            }
        });
    }
    
    private void populateDashBoardTable() {
    // Get the DefaultTableModel from the dashBoardTable
    DefaultTableModel tableModel = (DefaultTableModel) dashBoardTable.getModel();

    // Clear any existing rows
    tableModel.setRowCount(0);

    // Add each user's details to the table
    for (User user : userList) {
        Object[] rowData = {
            user.getUserID(),       // User ID
            user.getUserName(),     // User Name
            user.getContactNumber(),// Contact Number
            user.getUserEmail(),    // User Email
            user.getUserAddress()   // User Address
        };
        tableModel.addRow(rowData); // Add the row to the table model
    }
}
    
    private void sortDashBoardTableByUserName() {
    // Sort the userList by User Name
    userList.sort((u1, u2) -> u1.getUserName().compareToIgnoreCase(u2.getUserName()));

    // Repopulate the table with the sorted list
    populateDashBoardTable();
}
    
    private void populateLaundryTable() {
    try {
        // Retrieve the DefaultTableModel from jTable1
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();

        // Clear the existing rows in the table
        tableModel.setRowCount(0);

        // Iterate through the laundrylist and add rows to the table
        for (Laundry laundry : laundrylist) {
            if("Active".equals(laundry.getLaundryCondition())){
                
            
            Object[] rowData = {
                laundry.getLaundryId(),       // Laundry ID
                laundry.getLaundryWeight(),          // Laundry Weight
                laundry.getLaundryType(),     // Laundry Type
                laundry.getLaundryStatus()// Laundry Status
            };
            tableModel.addRow(rowData); // Add the row to the table model
            }
            
        }
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Error populating the table: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }

}
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CostumerIDComboBox;
    private javax.swing.JLabel CostumerIdLabel;
    private javax.swing.JLabel DropOffSericeLabel;
    private javax.swing.ButtonGroup LaundryTypeButtonGroup;
    private javax.swing.JComboBox<String> LaundryTypejComboBox1;
    private javax.swing.JPanel OrderPanel;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField SearchTextField;
    private javax.swing.JPanel TaskPanel;
    private javax.swing.JButton addLaundryButton;
    private javax.swing.JPanel dashBoardPanel;
    private javax.swing.JTabbedPane dashBoardTabPanel;
    private javax.swing.JTable dashBoardTable;
    private javax.swing.JButton deleteLaundryButton;
    private javax.swing.JCheckBox dropOffCheckBox;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel launderyWeightLabel;
    private javax.swing.JTextField laundryIDTextField1;
    private javax.swing.JLabel laundryTypeLabel;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel mainLabel;
    private javax.swing.JCheckBox pickUpCheckBox1;
    private javax.swing.JLabel pickUpServiceLabel;
    private javax.swing.JButton sortButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JComboBox<String> updateTypeComboBox;
    private javax.swing.JFormattedTextField weightJFormatedTextFiled;
    // End of variables declaration//GEN-END:variables
}
